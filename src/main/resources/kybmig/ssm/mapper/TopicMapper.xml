<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 和 java mapper 的类名一样，从包名开始打，有自动补全-->
<mapper namespace="kybmig.ssm.mapper.TopicMapper">
    <!-- resultType 和 mapper 中的方法返回值一样，不能省，从包名开始打，有自动补全-->
    <!--  里面的 sql 语句，有自动补全,要配置 ide 的 datasource -->
    <select id="selectAllTopic" resultMap="selectTopicWithUser">
        SELECT ssm.Topic.*,
               User.username as username
        FROM ssm.Topic
                     left join User
                on Topic.userId = User.id
        order by id desc;
    </select>

    <!-- 传参数方式1，直接传入一个基本类型 int，这个 int 会被绑定到 ${id} -->
    <!--    <select id="selectTopic" resultType="kybmig.ssm.model.TopicModel">-->
    <!--        SELECT *-->
    <!--        FROM ssm.Topic-->
    <!--        WHERE id = #{id}-->
    <!--    </select> -->

    <resultMap id="selectTopicWithUser" type="kybmig.ssm.model.TopicModel">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createdTime" column="createdTime"/>
        <result property="updatedTime" column="updatedTime"/>
        <result property="userId" column="userId"/>
        <collection property="user" ofType="kybmig.ssm.model.UserModel">
            <id property="id" column="userId"/>
            <result property="id" column="userId"/>
            <result property="username" column="username"/>
        </collection>
    </resultMap>

    <select id="selectTopic" resultMap="selectTopicWithUser">
        SELECT Topic.*,
               User.username,
               User.id as userId
        FROM Topic
                     left join User
                on Topic.userId = User.id
        where Topic.id = #{id}
    </select>


    <!-- 传参方式2，传入一个对象。content 代表这个对象的 content 属性，注意这个对象要有 getter setter -->
    <!-- useGeneratedKeys keyProperty 当我传入一个对象的时候，这两个属性可以把数据库创建的 id 赋值给这个对象 -->
    <insert id="insertTopic" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ssm.Topic (content, title, userId, createdTime, updatedTime, boardId)
        VALUES (#{content}, #{title}, #{userId}, #{createdTime}, #{updatedTime}, #{boardId})
    </insert>

    <update id="updateTopic">
        UPDATE ssm.Topic
        SET content    = #{content},
            title=#{title},
            updatedTime=#{updatedTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteTopic">
        DELETE
        FROM ssm.Topic
        WHERE id = #{id}
    </delete>

    <resultMap id="selectOneWithCommentsMap" type="kybmig.ssm.model.TopicModel">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <collection property="commentList" ofType="kybmig.ssm.model.TopicCommentModel">
            <id property="id" column="c_id"/>
            <result property="content" column="c_content"/>
        </collection>
    </resultMap>

    <select id="selectOneWithComments" resultMap="selectOneWithCommentsMap">
        SELECT Topic.id,
               Topic.title,
               Topic.content,
               TopicComment.id      as c_id,
               TopicComment.content as c_content
        FROM ssm.Topic
                     left join TopicComment
                on Topic.id = TopicComment.topicId
        where Topic.id = #{id}
    </select>

    <resultMap id="selectOneWithCommentsAndUserMap" type="kybmig.ssm.model.TopicModel">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createdTime" column="createdTime"/>
        <result property="updatedTime" column="updatedTime"/>
        <result property="userId" column="userId"/>
        <collection property="commentList" ofType="kybmig.ssm.model.TopicCommentModel">
            <id property="id" column="c_id"/>
            <result property="content" column="c_content"/>
            <association property="user" javaType="kybmig.ssm.model.UserModel">
                <result property="username" column="u_username"/>
            </association>
        </collection>
    </resultMap>

    <select id="selectOneWithCommentsAndUser" resultMap="selectOneWithCommentsAndUserMap">
        SELECT Topic.*,
               TopicComment.id      as c_id,
               TopicComment.content as c_content,
               User.username        as u_username
        FROM ssm.Topic
                     left join User
                on Topic.userId = User.id
                     left join (TopicComment join User)
                on Topic.id = TopicComment.topicId and TopicComment.userId = User.id
        where Topic.id = #{id}
    </select>

    <select id="findSomeTopicByUserId" resultType="kybmig.ssm.model.TopicModel">
        SELECT Topic.*
        FROM ssm.Topic
        where Topic.userId = #{userId}
        order by Topic.createdTime desc
                limit #{limit}
    </select>

    <select id="findTopicsByUserId" resultMap="selectTopicWithUser">
        SELECT User.username,
               User.id as userId,
               Topic.id,
               Topic.title,
               Topic.createdTime
        FROM ssm.User
                     left join Topic
                on Topic.userId = User.id
        where User.id = #{userId}
        order by Topic.createdTime desc
    </select>

    <select id="findTopicsByBoardId" resultMap="selectTopicWithUser">
        SELECT ssm.Topic.*,
               User.username,
               User.id as userId
        FROM ssm.Topic
                     left join User
                on Topic.userId = User.id
        WHERE Topic.boardId = #{boardId}
        order by id desc;
    </select>
</mapper>